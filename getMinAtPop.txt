Get min at pop
Now, we'll try to solve a famous stack problem.
You are given an array A of size N. You need to push the elements of the array into a stack and then print minimum in the stack at each pop.

Approach: Push element only if its smaller than top else push top.
Constraints:
1 <= T <= 100
1 <= Ai <= 107

Examples:
Input:
2
5
1 2 3 4 5
7
1 6 43 1 2 0 5
Output:
1 1 1 1 1
0 0 1 1 1 1 1

stack<int>_push(int arr[],int n)
{
   stack<int>s;
   s.push(arr[0]);
   for(int i=1;i<n;i++){
       if(arr[i]<s.top())
        s.push(arr[i]);
       else
        s.push(s.top());
   }
   return s;
    
}


/* print minimum element of the stack each time
   after popping
*/
void _getMinAtPop(stack<int>s)
{
    while(s.empty()==false){
        cout<<s.top()<<" ";
        s.pop();
    }
}