Removing consecutive duplicates - 2
Given an array A and an integer K. Find the maximum for each and every contiguous subarray of size K.

LESSON:DOING if(st.top()) when the stack is empty this will throw error.

Constraints:
1 ≤ T ≤ 200
1 ≤ N ≤ 107
1 ≤ K ≤ N
0 ≤ A[i] <= 107

Example:
Input:
2
9 3
1 2 3 1 4 5 2 3 6
10 4
8 5 10 7 9 4 15 12 90 13

Output:
3 3 4 5 5 5 6
10 10 10 15 15 90 90

CODE:
string removePair(string s){
     stack<char>st;
    st.push(s[0]);
    string output="";
    for(int i=1;i<s.length();i++){
        if(st.empty()){
            st.push(s[i]);
        }
        else if(st.top()!=s[i])
            st.push(s[i]);
        else if(st.top()==s[i] && st.empty()==false){
            st.pop();
        }
    }
    while(st.empty()==false){
        output+=st.top();
        st.pop();
    }
    reverse(output.begin(),output.end());
    return output;
}
