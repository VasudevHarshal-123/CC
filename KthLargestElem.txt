Kth largest element
Given an array arr[] of N positive integers and a number K. The task is to find the kth largest element in the array.

Approach:Priority_queue=O(n)  
If you have an array of size n and you want to build a heap from all items at once, Floyd's algorithm can do it with O(n) complexity. See Building a heap.
This corresponds to the std::priority_queue constructors that accept a container parameter.
If you have an empty priority queue to which you want to add n items, one at a time, then the complexity is O(n * log(n)).



Constraints:
1 <= T <= 100
1 <= N <= 106
1 <= arr[i] <= 106
1 <= K <= N

Example:
Input:
2
5 3
3 5 4 2 9
5 5
4 3 7 6 5

Output:
4
3

int KthLargest(int arr[], int n, int k) {
    priority_queue<int>pq(arr,arr+n);			//Takes O(n); manual insertion takes O(nlogn)
    int output;
    while(k--){
        output=pq.top();
        pq.pop();
    }
    return output;
}