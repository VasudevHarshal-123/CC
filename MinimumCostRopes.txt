Minimum Cost of ropes 
https://practice.geeksforgeeks.org/problems/minimum-cost-of-ropes-1587115620/1#

APPROACH: SORTING FAILS AS GOING FROM LEFT TO RIGHT ROPE SIZE INCREASES COMPARE TO AVAILABLE SIZE
EG: 2,4,6,7,9

2+4 = 6,6,7,9
6+6 = 12,7,9 nOW BETTER APPROACH IS 7+9 THEN ADD 12 WHICH WE CANT DO. hENCE, USE HEAP.

long long minCost(long long arr[], long long n) {
    sort(arr,arr+n);
    long long int ans=0,sum=arr[0];
    for(int i=1;i<n;i++){
        sum+=arr[i];
        ans+=sum;
    }
    return ans;
}


APPROACH 2: USING HEAPS: MAKE MIN HEAP TAKE OUT FIRST TWO ELEMENT

struct comp {
    bool operator()(const long long &a, const long long &b){
        return a>b;
    }
};

long long minCost(long long arr[], long long n) {
    long long ans=0,first,second;
    if(n==1)
        return 0;
											//MIN HEAP WITHOUT COMPARATOR
    priority_queue<long long,vector<long long>,greater<long long>>pq(arr,arr+n);
        
    while(!pq.empty()){
        first = pq.top();
        pq.pop();
        second = pq.top();
        pq.pop();
        ans+=first+second;
        if(!pq.empty()){
            pq.push(first+second);
        }
    }
    return ans;
}