Minimum Vertical Sum
Given a vector of vectors V. Find the minimum vertical sum. Vectors inside the vector V may not be of the same size.
The vertical sum is defined as described below:
If we have a vector of vectors V:
1  2 3 4
5 6
7 8 9

Constraints:
1 <= T <= 100
1 <= N <= 103
1 <= M <= 103
1 <= Vij <= 105

Example:
Input:
1
3
3
2 3 5
2
1 2
4
1 4 5 1

Output:
1

Time:O(n^2);

Code:
int minimum_vertical_sum(vector<vector<int>>v)
{
    int output = INT_MAX;
    int siz=0;
    for(int i=0;i<v.size();i++){
        if(v[i].size()>siz){
            siz=v[i].size();
        }
    }
    
    
    vector<int>VV(siz);
    
    for(int i=0;i<v.size();i++){
        for(int j=0;j<v[i].size();j++){
            VV[j]+=v[i][j];
        }
    }
    for(int i=0;i<VV.size();i++){
        if(VV[i]<output)
            output=VV[i];
    }
    return output;
}